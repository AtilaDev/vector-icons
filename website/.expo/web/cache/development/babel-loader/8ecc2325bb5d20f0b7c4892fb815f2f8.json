{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/atiladev/Desarrollo/rnProjects/expoProjects/vector-icons/website/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMediaQuery } from 'react-responsive';\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport List from \"./screens/List\";\nimport Detail from \"./screens/Detail\";\n\nvar myTheme = _objectSpread({}, DefaultTheme, {\n  roundness: 2,\n  colors: _objectSpread({}, DefaultTheme.colors, {\n    primary: '#7B1FA2',\n    accent: '#E1BEE7'\n  })\n});\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  var isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.container, {\n      paddingHorizontal: isDesktop ? 300 : null\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(PaperProvider, {\n    theme: myTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Navigator, {\n    mode: \"modal\",\n    headerMode: \"float\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"@expo/vector-icons | PWA\",\n    component: List,\n    options: {\n      headerStyle: {\n        backgroundColor: '#7B1FA2'\n      },\n      headerTintColor: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: Detail,\n    options: {\n      headerStyle: {\n        backgroundColor: '#7B1FA2'\n      },\n      headerTintColor: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(225, 190, 231,0.6)'\n  }\n});","map":{"version":3,"sources":["/Users/atiladev/Desarrollo/rnProjects/expoProjects/vector-icons/website/App.js"],"names":["useMediaQuery","React","NavigationContainer","createStackNavigator","Provider","PaperProvider","DefaultTheme","List","Detail","myTheme","roundness","colors","primary","accent","Stack","App","isDesktop","query","styles","container","paddingHorizontal","headerShown","headerStyle","backgroundColor","headerTintColor","StyleSheet","create","flex"],"mappings":";;;;;;;AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;AAEA,SAASC,QAAQ,IAAIC,aAArB,EAAoCC,YAApC,QAAwD,oBAAxD;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,OAAO,qBACRH,YADQ;AAEXI,EAAAA,SAAS,EAAE,CAFA;AAGXC,EAAAA,MAAM,oBACDL,YAAY,CAACK,MADZ;AAEJC,IAAAA,OAAO,EAAE,SAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AAHK,EAAb;;AAUA,IAAMC,KAAK,GAAGX,oBAAoB,EAAlC;AAEA,eAAe,SAASY,GAAT,GAAe;AAC5B,MAAMC,SAAS,GAAGhB,aAAa,CAAC;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA/B;AAEA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAEL;AAAEC,MAAAA,iBAAiB,EAAEJ,SAAS,GAAG,GAAH,GAAS;AAAvC,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,UAAU,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,OAAO,EAAE;AAAEY,MAAAA,WAAW,EAAE;AAAf,KADX;AAEE,IAAA,IAAI,EAAC,0BAFP;AAGE,IAAA,SAAS,EAAEd,IAHb;AAIE,IAAA,OAAO,EAAE;AACPe,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OADN;AAIPC,MAAAA,eAAe,EAAE;AAJV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEhB,MAFb;AAGE,IAAA,OAAO,EAAE;AACPc,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OADN;AAIPC,MAAAA,eAAe,EAAE;AAJV,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAFF,CALF,CADF,CADF;AAoCD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETJ,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import { useMediaQuery } from 'react-responsive';\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar, View, StyleSheet } from 'react-native';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport List from './screens/List';\nimport Detail from './screens/Detail';\n\nconst myTheme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#7B1FA2',\n    accent: '#E1BEE7',\n  },\n};\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\n\n  return (\n    <NavigationContainer>\n      <View\n        style={[\n          styles.container,\n          { paddingHorizontal: isDesktop ? 300 : null },\n        ]}>\n        <PaperProvider theme={myTheme}>\n          <StatusBar barStyle=\"light-content\" />\n          <Stack.Navigator mode=\"modal\" headerMode=\"float\">\n            <Stack.Screen\n              options={{ headerShown: false }}\n              name=\"@expo/vector-icons | PWA\"\n              component={List}\n              options={{\n                headerStyle: {\n                  backgroundColor: '#7B1FA2',\n                },\n                headerTintColor: '#fff',\n              }}\n            />\n            <Stack.Screen\n              name=\"Details\"\n              component={Detail}\n              options={{\n                headerStyle: {\n                  backgroundColor: '#7B1FA2',\n                },\n                headerTintColor: '#fff',\n              }}\n            />\n          </Stack.Navigator>\n        </PaperProvider>\n      </View>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(225, 190, 231,0.6)',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}